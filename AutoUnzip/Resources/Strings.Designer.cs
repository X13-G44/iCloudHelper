//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoUnzip.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutoUnzip.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Browse... ähnelt.
        /// </summary>
        public static string btnConfig_Browse {
            get {
                return ResourceManager.GetString("btnConfig_Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save settings ähnelt.
        /// </summary>
        public static string btnConfig_SaveConfig {
            get {
                return ResourceManager.GetString("btnConfig_SaveConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string cbConfig_LanguageDefault {
            get {
                return ResourceManager.GetString("cbConfig_LanguageDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English ähnelt.
        /// </summary>
        public static string cbConfig_LanguageEnglish {
            get {
                return ResourceManager.GetString("cbConfig_LanguageEnglish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gerrman ähnelt.
        /// </summary>
        public static string cbConfig_LanguageGerman {
            get {
                return ResourceManager.GetString("cbConfig_LanguageGerman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while waiting for file access to file \&quot;{0}\&quot; located in folder \&quot;{1}\&quot;.\n\nNo images was extracted and no backup files was created!\nSystem error message is \&quot;{2}\&quot;. ähnelt.
        /// </summary>
        public static string dlg_AchiveFileAccessError {
            get {
                return ResourceManager.GetString("dlg_AchiveFileAccessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while processing a new \&quot;{0}\&quot; file in \&quot;{1}\&quot; folder.\nThe error occurred at the following processing step: {2}.\n\nBackup files exist in the folder \&quot;{3}\&quot;.\n\nOptional error message: \&quot;{4}\&quot;. ähnelt.
        /// </summary>
        public static string dlg_DoWorkError {
            get {
                return ResourceManager.GetString("dlg_DoWorkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one required folder is missing.\nFor this program to work properly, the folders must be configured correctly.\n\nShould the configuration window be displayed so that the settings can be adjusted? ähnelt.
        /// </summary>
        public static string dlg_InvalidConfig {
            get {
                return ResourceManager.GetString("dlg_InvalidConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select folder for backup: ähnelt.
        /// </summary>
        public static string dlg_SelectBackupPath {
            get {
                return ResourceManager.GetString("dlg_SelectBackupPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the destination folder for the unpacked image files: ähnelt.
        /// </summary>
        public static string dlg_SelectExtractPath {
            get {
                return ResourceManager.GetString("dlg_SelectExtractPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Executable files (*.exe)|*.exe|All files (*.*)|*.* ähnelt.
        /// </summary>
        public static string dlg_SelectQuickSortFileDlgFilter {
            get {
                return ResourceManager.GetString("dlg_SelectQuickSortFileDlgFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select QuickSort application ähnelt.
        /// </summary>
        public static string dlg_SelectQuickSortFileDlgTitle {
            get {
                return ResourceManager.GetString("dlg_SelectQuickSortFileDlgTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a folder to monitor the downloaded iCloud Picture Archive file: ähnelt.
        /// </summary>
        public static string dlg_SelectWatchPath {
            get {
                return ResourceManager.GetString("dlg_SelectWatchPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close application ähnelt.
        /// </summary>
        public static string dlg_TrayNotiExit {
            get {
                return ResourceManager.GetString("dlg_TrayNotiExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string dlg_TrayNotiSettings {
            get {
                return ResourceManager.GetString("dlg_TrayNotiSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start QuickSort ähnelt.
        /// </summary>
        public static string dlg_TrayNotiStartQuickSort {
            get {
                return ResourceManager.GetString("dlg_TrayNotiStartQuickSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Application file does not exists. ähnelt.
        /// </summary>
        public static string lApplFileNotExists {
            get {
                return ResourceManager.GetString("lApplFileNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No application file selected. ähnelt.
        /// </summary>
        public static string lApplFileNotSelected {
            get {
                return ResourceManager.GetString("lApplFileNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder does not exists. ähnelt.
        /// </summary>
        public static string lDirectoyNotExists {
            get {
                return ResourceManager.GetString("lDirectoyNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string lError {
            get {
                return ResourceManager.GetString("lError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are invalid chars. ähnelt.
        /// </summary>
        public static string lInvalidPrefixChars {
            get {
                return ResourceManager.GetString("lInvalidPrefixChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prefix must have at least {0} or more chars. ähnelt.
        /// </summary>
        public static string lInvalidPrefixLength {
            get {
                return ResourceManager.GetString("lInvalidPrefixLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prefix starts / ends with invalid chars. ähnelt.
        /// </summary>
        public static string lInvalidPrefixStartEndChars {
            get {
                return ResourceManager.GetString("lInvalidPrefixStartEndChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input field is empty ähnelt.
        /// </summary>
        public static string lNoText {
            get {
                return ResourceManager.GetString("lNoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number must between {0} and {1}. ähnelt.
        /// </summary>
        public static string lNumberRangeError {
            get {
                return ResourceManager.GetString("lNumberRangeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text must be a number. ähnelt.
        /// </summary>
        public static string lTextMustBeANumber {
            get {
                return ResourceManager.GetString("lTextMustBeANumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string lWarning {
            get {
                return ResourceManager.GetString("lWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable backup from iCloud archive files ähnelt.
        /// </summary>
        public static string tbConfig_BackupEnable {
            get {
                return ResourceManager.GetString("tbConfig_BackupEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable retention monitoring for the backup folder ähnelt.
        /// </summary>
        public static string tbConfig_BackupEnableRetention {
            get {
                return ResourceManager.GetString("tbConfig_BackupEnableRetention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup folder ähnelt.
        /// </summary>
        public static string tbConfig_BackupPath {
            get {
                return ResourceManager.GetString("tbConfig_BackupPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retention period [days] ähnelt.
        /// </summary>
        public static string tbConfig_BackupRetentionPeriod {
            get {
                return ResourceManager.GetString("tbConfig_BackupRetentionPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination folder of the extracted image files ähnelt.
        /// </summary>
        public static string tbConfig_ExtractPath {
            get {
                return ResourceManager.GetString("tbConfig_ExtractPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iCloud image archive file ähnelt.
        /// </summary>
        public static string tbConfig_FilenameToSearch {
            get {
                return ResourceManager.GetString("tbConfig_FilenameToSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select language ähnelt.
        /// </summary>
        public static string tbConfig_Language {
            get {
                return ResourceManager.GetString("tbConfig_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prefix for temporary folder ähnelt.
        /// </summary>
        public static string tbConfig_TempFolderPrefix {
            get {
                return ResourceManager.GetString("tbConfig_TempFolderPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General folder settings ähnelt.
        /// </summary>
        public static string tbConfig_Title1 {
            get {
                return ResourceManager.GetString("tbConfig_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup settings ähnelt.
        /// </summary>
        public static string tbConfig_Title2 {
            get {
                return ResourceManager.GetString("tbConfig_Title2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interface settings ähnelt.
        /// </summary>
        public static string tbConfig_Title3 {
            get {
                return ResourceManager.GetString("tbConfig_Title3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other settings ähnelt.
        /// </summary>
        public static string tbConfig_Title4 {
            get {
                return ResourceManager.GetString("tbConfig_Title4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Dark Mode theme ähnelt.
        /// </summary>
        public static string tbConfig_UseDarkModeColorTheme {
            get {
                return ResourceManager.GetString("tbConfig_UseDarkModeColorTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Watched folder ähnelt.
        /// </summary>
        public static string tbConfig_WatchPath {
            get {
                return ResourceManager.GetString("tbConfig_WatchPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die iCloudHelper - Settings ähnelt.
        /// </summary>
        public static string tbConfig_WindowTitle {
            get {
                return ResourceManager.GetString("tbConfig_WindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} iCloud images processed: ähnelt.
        /// </summary>
        public static string tbMain_ExtractedFileText {
            get {
                return ResourceManager.GetString("tbMain_ExtractedFileText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to start Quicksort application ähnelt.
        /// </summary>
        public static string tbMain_StartQuickSort {
            get {
                return ResourceManager.GetString("tbMain_StartQuickSort", resourceCulture);
            }
        }
    }
}
