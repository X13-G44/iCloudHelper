<Window x:Class="QuickSort.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QuickSort"
        xmlns:myView="clr-namespace:QuickSort.ui"
        mc:Ignorable="d"
        Title="Dateiauswahl" 
        Height="800" 
        Width="1000"
        Background="{DynamicResource MainWindowBackground}"
        WindowStyle="None"
        ResizeMode="CanResizeWithGrip" Icon="/icloud-logo-49272-Windows.ico" >

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <!-- File Titles Context Menu Style -->
        <Style x:Key="CustomContextMenuStyle" TargetType="ContextMenu">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">

                        <Border x:Name="Border"
                                BorderBrush="{DynamicResource CommonBorderBrushColor}" 
                                BorderThickness="2" 
                                Background="{DynamicResource ContextMenuBackgroundColor}"
                                Padding="10">

                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="CustomMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Background" Value="{DynamicResource ContextMenuBtnBackgroundColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource ContextMenuBtnTextColor}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="OUTER_BORDER"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10">

                            <StackPanel Orientation="Horizontal">

                                <TextBlock x:Name="SYMBOL_TEXT"
                                           Text="{TemplateBinding Tag}" 
                                           Foreground="{DynamicResource CommonBorderBrushColor}" 
                                           FontFamily="Segoe UI Symbol" 
                                           FontSize="{TemplateBinding FontSize}" 
                                           Margin="0"
                                           VerticalAlignment="Center"/>

                                <TextBlock x:Name="TEXT"
                                           Margin="0"
                                           Padding="0">
                                    
                                <ContentPresenter Margin="{TemplateBinding Padding}" 
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"/>

                                </TextBlock>

                            </StackPanel>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource CommonBorderBrushColor}"/>
                                <Setter TargetName="SYMBOL_TEXT" Property="Foreground" Value="{DynamicResource ContextMenuBtnTextMouseOverColor}"/>
                                <Setter TargetName="TEXT" Property="Foreground" Value="{DynamicResource ContextMenuBtnTextMouseOverColor}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="OUTER_BORDER" Property="Visibility" Value="Collapsed"/>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Tooltip-Style -->
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">

                        <Border Name="Border"
                                BorderBrush="{DynamicResource CommonBorderBrushColor}" 
                                BorderThickness="2" 
                                Background="{DynamicResource ToolTipBackgroundColor}"
                                Padding="10"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">

                            <ContentPresenter Margin="4"                                                  
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar-Style -->
        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid x:Name="BgGrid" 
                                          Background="Transparent"
                                          SnapsToDevicePixels="true">

                            <Border x:Name="ThumbLine"
                                                Width="1" 
                                                Background="#FF7D7D86" 
                                                HorizontalAlignment="Center"/>

                            <Track x:Name="PART_Track"
                                               IsDirectionReversed="true" 
                                               Focusable="False">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.LineUpCommand" 
                                                              Style="{x:Null}" 
                                                              IsTabStop="False" 
                                                              Opacity="0"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>

                                    <Thumb x:Name="Thumb"
                                                       OverridesDefaultStyle ="True"
                                                       IsTabStop ="False"
                                                       Foreground="#FF616469">

                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Rectangle x:Name="ThumbRec"
                                                                       Height="35" 
                                                                       Width="8" 
                                                                       Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Thumb}}" 
                                                                       RadiusX="5" 
                                                                       RadiusY="5">
                                                    <Rectangle.Effect>
                                                        <DropShadowEffect ShadowDepth="0" 
                                                                                      BlurRadius="10" 
                                                                                      Color="#FF616469" />
                                                    </Rectangle.Effect>
                                                </Rectangle>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>

                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.LineDownCommand" 
                                                              Style="{x:Null}" 
                                                              IsTabStop="False" 
                                                              Opacity="0"/>
                                </Track.IncreaseRepeatButton>
                            </Track>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Thumb" Property="Foreground" Value="#FF4A90E2"/>
                                <Setter TargetName="ThumbLine" Property="Background" Value="#FF2A578C"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Thumb" Property="Opacity" Value="0.3"/>
                                <Setter TargetName="ThumbLine" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Favorite Target Folder Item Button-Style -->
        <Style x:Key="FavoriteTargetFolderItemButtonStyle" TargetType="myView:FavoriteTargetFolderButtonUi">
            <!--This setter is need for ToolTip-->
            <Setter Property="Foreground" Value="{DynamicResource ToolTipTextColor}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="175"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="myView:FavoriteTargetFolderButtonUi">
                        <Border x:Name="OUTER_BORDER"
                                BorderBrush="{DynamicResource TargetFolderBtnSelectedColor}"
                                BorderThickness="1"
                                Background="{DynamicResource TargetFolderBtnBackgroundColor}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10">
                            <Grid>
                                <Path Data="M10,2 L12.94,7.63 L19,8.27 L14,12.14 L15.18,18.02 L10,15 L4.82,18.02 L6,12.14 L1,8.27 L7.06,7.63 Z"
                                      Stroke="#FFE6C010"
                                      StrokeThickness="2"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Top"                                      
                                      Visibility="{Binding IsPinned, Converter={StaticResource BoolToVis}}"/>

                                <StackPanel Orientation="Horizontal" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Center">

                                    <TextBlock Text="&#xE1C1;" 
                                           Foreground="{DynamicResource TargetFolderBtnSymbolColor}" 
                                           FontSize="{TemplateBinding FontSize}" 
                                           FontFamily="Segoe UI Symbol" 
                                           Margin="0,0,10,0"
                                           VerticalAlignment="Center"/>

                                    <TextBlock Text="{TemplateBinding Content}" 
                                           Foreground="{DynamicResource TargetFolderBtnTextColor}" 
                                           FontSize="{TemplateBinding FontSize}" 
                                           FontFamily="{TemplateBinding FontFamily}" 
                                           Margin="0"
                                           VerticalAlignment="Center"/>

                                </StackPanel>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource TargetFolderBtnMouseOverColor}"/>
                            </Trigger>

                            <DataTrigger Binding="{Binding IsPinned}" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="BorderBrush" Value="#FFE6C010"/>
                            </DataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- File Title Button-Style -->
        <Style x:Key="FileTitleButtonStyle" TargetType="myView:FileTitleButtonUi">
            <!--This setter is need for ToolTip-->
            <Setter Property="Foreground" Value="{DynamicResource ToolTipTextColor}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="myView:FileTitleButtonUi">

                        <Border x:Name="OUTER_BORDER" 
                        CornerRadius="5"
                        Padding="{TemplateBinding Padding}" 
                        Margin="{TemplateBinding Margin}">

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!--<Path Grid.Row="0"
                                Grid.RowSpan="2"
                                Margin="1"
                                Data="M2,8 L6,12 L14,4"
                                Stroke="{DynamicResource CommonBorderBrushColor}"
                                StrokeThickness="2"                                      
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Visibility="{Binding IsSelected, Converter={StaticResource BoolToVis}}"/>-->

                                <Image Grid.Row="0" 
                                    Source="{Binding Thumbnail}" 
                                    Stretch="Uniform"/>

                                <TextBlock x:Name="FILENAME_TEXT"
                                   Grid.Row="1"
                                   Text="{Binding DisplayName}" 
                                   Margin="0,5,0,0"
                                   TextAlignment="Center" 
                                   Foreground="{DynamicResource CommonForegroundColor}" 
                                   FontSize="12" 
                                   TextTrimming="CharacterEllipsis"/>

                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="BorderBrush" Value="{DynamicResource CommonBorderBrushColor}"/>
                                <Setter TargetName="OUTER_BORDER" Property="BorderThickness" Value="5"/>
                                <Setter TargetName="OUTER_BORDER" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="{DynamicResource CommonBorderBrushColorColor}" Offset="1" />
                                                <GradientStop Color="#00000000" Offset=".5" />
                                                <GradientStop Color="#00000000" Offset="0" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource FileTitleBtnMouseOverColor}"/>
                            </Trigger>

                            <DataTrigger Binding="{Binding HideFilenameText}" Value="True">
                                <Setter TargetName="FILENAME_TEXT" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Virtual Root Directory Button-Style -->
        <Style x:Key="VirtualRootDirectoryButtonStyle" TargetType="myView:VirtualRootDirectoryButtonUi">
            <!--This setter is need for ToolTip-->
            <Setter Property="Foreground" Value="{DynamicResource ToolTipTextColor}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="myView:VirtualRootDirectoryButtonUi">

                        <Border x:Name="OUTER_BORDER" 
                        CornerRadius="5"
                        Padding="{TemplateBinding Padding}" 
                        Margin="{TemplateBinding Margin}">

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock x:Name="FILENAME_TEXT"
                                   Grid.Row="1"
                                   Text="{Binding DisplayName}" 
                                   Margin="0,5,0,0"
                                   TextAlignment="Center" 
                                   Foreground="{DynamicResource CommonForegroundColor}" 
                                   FontSize="12" 
                                   TextTrimming="CharacterEllipsis"/>

                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="BorderBrush" Value="{DynamicResource CommonBorderBrushColor}"/>
                                <Setter TargetName="OUTER_BORDER" Property="BorderThickness" Value="5"/>
                                <Setter TargetName="OUTER_BORDER" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="{DynamicResource CommonBorderBrushColorColor}" Offset="1" />
                                                <GradientStop Color="#00000000" Offset=".5" />
                                                <GradientStop Color="#00000000" Offset="0" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource FileTitleBtnMouseOverColor}"/>
                            </Trigger>

                            <DataTrigger Binding="{Binding HideDirectoryText}" Value="True">
                                <Setter TargetName="FILENAME_TEXT" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DialogBox Button-Style -->
        <Style x:Key="DialogboxButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{DynamicResource TargetFolderBtnTextColor}"/>
            <Setter Property="Background" Value="{DynamicResource TargetFolderBtnSelectedColor}"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="OUTER_BORDER"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10">
                            <StackPanel Orientation="Horizontal" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center">

                                <TextBlock Text="{TemplateBinding Tag}" 
                                           Foreground="{DynamicResource TargetFolderBtnSymbolColor}" 
                                           FontFamily="Segoe UI Symbol" 
                                           FontSize="{TemplateBinding FontSize}" 
                                           Margin="5,5,0,5"
                                           VerticalAlignment="Center"/>

                                <TextBlock Text="{TemplateBinding Content}" 
                                           Foreground="{TemplateBinding Foreground}" 
                                           FontSize="{TemplateBinding FontSize}" 
                                           FontFamily="{TemplateBinding FontFamily}" 
                                           Margin="5,5,5,5"
                                           VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource TargetFolderBtnMouseOverColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+A" Command="{Binding Cmd_ContextMenu_SelectAllFileTitles}" />
        <!--<KeyBinding Key="A" Modifiers="Ctrl" Command="{Binding Cmd_ContextMenu_SelectAllFileTitles}" />-->
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="250"/>
            <!--<RowDefinition Height="Auto" MinHeight="100"/>-->
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="230"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Window Title bar section -->
        <Grid Grid.Row="0"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              MouseLeftButtonDown="Grid_MouseLeftButtonDown"
              Cursor="Hand"
              Background="{DynamicResource CommonBorderBrushColor}">


            <!-- Configwindow -->
            <Button Width="32" Height="32" Margin="0,0,5,0"
                    Background="Transparent" BorderThickness="0"
                    HorizontalAlignment="Left"
                    Command="{Binding Cmd_ShowConfigWindow}">

                <TextBlock Text="&#xE0C3;"
                           FontFamily="Segoe UI Symbol" 
                           FontSize="16" 
                           VerticalAlignment="Center" 
                           HorizontalAlignment="Center" 
                           Foreground="White"/>
            </Button>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5">

                <!-- Minimize -->
                <Button Width="32" Height="32" Margin="0,0,5,0"
                        Background="Transparent" BorderThickness="0"
                        Command="{Binding Cmd_ApplicationMinimize}">

                    <TextBlock Text="━"
                               FontSize="16" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               Foreground="White"/>
                </Button>

                <!-- Maximize / Restore -->
                <Button Width="32" Height="32"
                        Background="Transparent" BorderThickness="0"
                        Command="{Binding Cmd_ApplicationMaximizeRestore}">
                    <TextBlock Text="▢" 
                               FontSize="16" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               Foreground="White"/>
                </Button>

                <!-- Close -->
                <Button Width="32" Height="32" Margin="0,0,5,0"
                        Background="Transparent" BorderThickness="0"
                        Command="{Binding Cmd_ApplicationClose}">

                    <TextBlock Text="✕" 
                               FontSize="18" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               Foreground="White"/>
                </Button>
            </StackPanel>

        </Grid>

        <!-- Favorite Target Folder Section -->
        <Border Grid.Row="1"
                Grid.Column="0"
                Margin="15"                
                HorizontalAlignment="Left"
                Background="{DynamicResource CommonBackgroundColor}"
                BorderThickness="2"
                BorderBrush="{DynamicResource SectionBorderBrushColor}"
                CornerRadius="5">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Margin="10,10,0,5"
                           Foreground="{DynamicResource CommonForegroundColor}"
                           FontSize="18" 
                           FontWeight="Bold"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Left">
                    Favoriten:
                </TextBlock>

                <Rectangle Grid.Row="1"                           
                           Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"                           
                           Height="1" 
                           Fill="{DynamicResource HeadlineBorderBrushColor}" 
                           VerticalAlignment="Top" 
                           HorizontalAlignment="Left"/>

                <ItemsControl Grid.Row="2"
                              Margin="5,10"
                              ItemsSource="{Binding FavoriteTargetFolderList}">

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" 
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>

                            <myView:FavoriteTargetFolderButtonUi Style="{StaticResource FavoriteTargetFolderItemButtonStyle}"
                                    Margin="5" 
                                    Padding="5"                    
                                                                                                         
                                    Content="{Binding DisplayName}"
                                                                     
                                    IsPinned="{Binding IsPinned}"
                                    ToolTip="{Binding ToolTip}"
                                                                     
                                    Command="{Binding DataContext.Cmd_ClickOnFavoriteTargetFolderClick, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="{Binding Path}">

                                <myView:FavoriteTargetFolderButtonUi.ContextMenu>
                                    <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                        <!--Irgenwie funktioniert das mit dem CommandoBinding nicht: Die Kommando-Properties sind im Viewmodel abgelegt. 
                                            um darauf zuzugreifen, muss mus der Datencontext der Items, die in der ItemsControl-Liste
                                            Angezeit werden, geändert werden. Diese Items haben (DataTemplate) einen geänderten Datencontext; der zeigt jeweils auf 
                                            eine Instanz des FileTile-Model. Irgenwie kann das Binding nicht aufgelöst werden. 
                                            Workaround: Die FileTile-Model Klasse stellt ebenfalls die Kommando-Properties bereit.-->

                                        <!--<MenuItem Header="Favorit Test"
                                                  Style="{StaticResource CustomMenuItemStyle}"
                                                  Command="{Binding DataContext.Cmd_ContextMenu_RemoveTargetFolder, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                  CommandParameter="{Binding}" />-->

                                        <!--<MenuItem Header="Favorit Test"
                                                  Style="{StaticResource CustomMenuItemStyle}"
                                                  DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                                                  Command="{Binding Cmd_ContextMenu_RemoveTargetFolder}"
                                                  CommandParameter="{Binding}" />-->

                                        <MenuItem Header="Eintrag hinzufügen"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                Tag="&#xE1DA;"
                                                Command="{Binding Cmd_AddFolderFromListCommand}"
                                                CommandParameter="{Binding}"/>

                                        <MenuItem Header="Eintrag entfernen"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                Tag="&#xE107;"
                                                Command="{Binding Cmd_RemoveFolderFromListCommand}"
                                                CommandParameter="{Binding}"/>

                                        <MenuItem Header="Eintrag fixieren"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                Tag="&#xE1CF;"
                                                Command="{Binding Cmd_SetTargetFolderAsFavorite}"/>

                                        <!--Alternative symbol: &#xE1CE;-->
                                        <MenuItem Header="Fixierung aufheben"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                Tag="&#xE195;"
                                                Command="{Binding Cmd_ClearTargetFolderFavorite}"/>

                                    </ContextMenu>
                                </myView:FavoriteTargetFolderButtonUi.ContextMenu>

                            </myView:FavoriteTargetFolderButtonUi>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>

            </Grid>

            <Border.ContextMenu>
                <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                    <MenuItem Header="Eintrag hinzufügen"
                                    Style="{StaticResource CustomMenuItemStyle}"
                                    Tag="&#xE1DA;"
                                    Command="{Binding Cmd_ContextMenu_AddFavoriteTargetFolderItem}"
                                    CommandParameter="{Binding}"/>

                </ContextMenu>
            </Border.ContextMenu>

        </Border>

        <!-- File Titles Section -->
        <Border Grid.Row="1"
                Grid.Column="1"
                Margin="15"
                Background="{DynamicResource CommonBackgroundColor}"
                BorderThickness="2"
                BorderBrush="{DynamicResource SectionBorderBrushColor}"
                CornerRadius="5">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Margin="10,10,0,5"
                           Foreground="{DynamicResource CommonForegroundColor}"
                           FontSize="18" 
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left">
                    Bildauswahl:
                </TextBlock>

                <TextBlock Grid.Row="0"
                           Margin="10,10,10,5"
                           Foreground="{DynamicResource CommonForegroundColor}"
                           FontSize="18"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right" 
                           FontFamily="Segoe UI Light" 
                           FontStyle="Italic"
                           Text="{Binding FileTileStatusText}"/>

                <Rectangle Grid.Row="1"                           
                           Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"                           
                           Height="1" 
                           Fill="{DynamicResource HeadlineBorderBrushColor}" 
                           VerticalAlignment="Center" 
                           HorizontalAlignment="Left"/>

                <ScrollViewer Grid.Row="2" 
                              Margin="5,10">

                    <ItemsControl ItemsSource="{Binding FileTileList}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <myView:FileTitleButtonUi Style="{StaticResource FileTitleButtonStyle}"
                                    Width="{Binding Width}"
                                    Height="{Binding Height}"
                                    Margin="5"                                                        
                                    
                                    DisplayName="{Binding DisplayName}"
                                    Thumbnail="{Binding Thumbnail}"
                                    IsSelected="{Binding IsSelected}"
                                    HideFilenameText ="{Binding HideFilenameText}"
                                    SizeLevel ="{Binding SizeLevel}"
                                    
                                    ToolTip="{Binding ToolTip}"
                                    
                                    Command="{Binding DataContext.Cmd_ClickOnFileTitleItem, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="{Binding}"/>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                    </ItemsControl>

                </ScrollViewer>

            </Grid>

            <Border.ContextMenu>
                <ContextMenu Style="{StaticResource CustomContextMenuStyle}">
                    <MenuItem Header="Alles markieren" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE1EF;"
                              Command="{Binding Cmd_ContextMenu_SelectAllFileTitles}"/>

                    <MenuItem Header="Auswahl aufheben" 
                              Style="{StaticResource CustomMenuItemStyle}"                               
                              Command="{Binding Cmd_ContextMenu_UnSelectAllFileTitles}"/>

                    <MenuItem Header="Kleine Symbolgröße" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE12E;"
                              Command="{Binding Cmd_ContextMenu_SetFileTitleSize}" 
                              CommandParameter="0"/>

                    <MenuItem Header="Mittlere Symbolgröße" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE12E;"
                              Command="{Binding Cmd_ContextMenu_SetFileTitleSize}"
                              CommandParameter="1"/>

                    <MenuItem Header="Große Symbolgröße" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE12E;"
                              Command="{Binding Cmd_ContextMenu_SetFileTitleSize}" 
                              CommandParameter="2"/>

                    <MenuItem Header="Neu einlesen" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE117;"
                              Command="{Binding Cmd_ContextMenu_RefreshFileTitleList}"
                              CommandParameter="2"/>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>




        <!-- File Explorer Section -->
        <Border Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="15"
                Background="{DynamicResource CommonBackgroundColor}"
                BorderThickness="2"
                BorderBrush="{DynamicResource SectionBorderBrushColor}"
                CornerRadius="5">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Margin="10,10,0,5"
                           Foreground="{DynamicResource CommonForegroundColor}"
                           FontSize="18" 
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left">
                    Zielordner Auswahl:
                </TextBlock>

                <Rectangle Grid.Row="1"                           
                           Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"                           
                           Height="1" 
                           Fill="{DynamicResource HeadlineBorderBrushColor}" 
                           VerticalAlignment="Center" 
                           HorizontalAlignment="Left"/>

                <StackPanel Grid.Row="2" 
                            Orientation="Horizontal">

                    <!-- Virtual Root Directory List -->
                    <ScrollViewer Margin="5,10">
                        <ItemsControl ItemsSource="{Binding VirtualRootDirectoryList}">

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>

                                    <myView:VirtualRootDirectoryButtonUi Style="{StaticResource VirtualRootDirectoryButtonStyle}"
                                        Width="{Binding Width}"
                                        Height="{Binding Height}"
                                        Margin="5"                                                        
                                                                                                    
                                        DisplayName="{Binding DisplayName}"

                                        IsSelected="{Binding IsSelected}"
                                        HideDirectoryText ="{Binding HideDirectoryText}"
                                        
                                        ToolTip="{Binding ToolTip}"
                                        
                                        Command="{Binding DataContext.Cmd_ClickOnVirtualRootDirectoryItem, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}">

                                        <myView:VirtualRootDirectoryButtonUi.ContextMenu>
                                            <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                                <!--Irgenwie funktioniert das mit dem CommandoBinding nicht: Die Kommando-Properties sind im Viewmodel abgelegt. 
                                                um darauf zuzugreifen, muss mus der Datencontext der Items, die in der ItemsControl-Liste
                                                Angezeit werden, geändert werden. Diese Items haben (DataTemplate) einen geänderten Datencontext; der zeigt jeweils auf 
                                                eine Instanz des FileTile-Model. Irgenwie kann das Binding nicht aufgelöst werden. 
                                                Workaround: Die FileTile-Model Klasse stellt ebenfalls die Kommando-Properties bereit.-->

                                                <!--<MenuItem Header="Favorit Test"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                Command="{Binding DataContext.Cmd_ContextMenu_RemoveTargetFolder, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}" />-->

                                                <!--<MenuItem Header="Favorit Test"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                                                Command="{Binding Cmd_ContextMenu_RemoveTargetFolder}"
                                                CommandParameter="{Binding}" />-->

                                                <MenuItem Header="Eintrag hinzufügen"
                                                    Style="{StaticResource CustomMenuItemStyle}"
                                                    Tag="&#xE107;"
                                                    Command="{Binding Cmd_AddToListCommand}"
                                                    CommandParameter="{Binding}"/>

                                                <MenuItem Header="Eintrag entfernen"
                                                    Style="{StaticResource CustomMenuItemStyle}"
                                                    Tag="&#xE107;"
                                                    Command="{Binding Cmd_RemoveItemFromListCommand}"
                                                    CommandParameter="{Binding}"/>

                                            </ContextMenu>
                                        </myView:VirtualRootDirectoryButtonUi.ContextMenu>

                                    </myView:VirtualRootDirectoryButtonUi>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                        </ItemsControl>

                        <ScrollViewer.ContextMenu>
                            <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                <MenuItem Header="Eintrag hinzufügen"
                                    Style="{StaticResource CustomMenuItemStyle}"
                                    Tag="&#xE107;"
                                    Command="{Binding Cmd_ContextMenu_AddVirtualRootDirectoryItem}"
                                    CommandParameter="{Binding}"/>

                            </ContextMenu>
                        </ScrollViewer.ContextMenu>
                    </ScrollViewer>

                    <!-- 1st Stage Directory Content List -->
                    <ScrollViewer Margin="5,10,5,10">
                        <ItemsControl ItemsSource="{Binding FileTileList}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>

                                    <myView:FileTitleButtonUi Style="{StaticResource FileTitleButtonStyle}"
                                                        Width="{Binding Width}"
                                                        Height="{Binding Height}"
                                                        Margin="5"                                                        
                                                        
                                                        DisplayName="{Binding DisplayName}"
                                                        Thumbnail="{Binding Thumbnail}"
                                                        IsSelected="{Binding IsSelected}"
                                                        HideFilenameText ="{Binding HideFilenameText}"
                                                        SizeLevel ="{Binding SizeLevel}"
                                                        
                                                        ToolTip="{Binding ToolTip}"
                                                        
                                                        Command="{Binding DataContext.Cmd_ClickOnFileTitleItem, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"/>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                        </ItemsControl>
                    </ScrollViewer>

                    <!-- 2nd Stage Directory Content List -->
                    <ScrollViewer Margin="5,10,5,10">
                        <ItemsControl ItemsSource="{Binding FileTileList}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>

                                    <myView:FileTitleButtonUi Style="{StaticResource FileTitleButtonStyle}"
                                                        Width="{Binding Width}"
                                                        Height="{Binding Height}"
                                                        Margin="5"                                                        
                                                        
                                                        DisplayName="{Binding DisplayName}"
                                                        Thumbnail="{Binding Thumbnail}"
                                                        IsSelected="{Binding IsSelected}"
                                                        HideFilenameText ="{Binding HideFilenameText}"
                                                        SizeLevel ="{Binding SizeLevel}"
                                                        
                                                        ToolTip="{Binding ToolTip}"
                                                        
                                                        Command="{Binding DataContext.Cmd_ClickOnFileTitleItem, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"/>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                        </ItemsControl>
                    </ScrollViewer>

                </StackPanel>

            </Grid>

        </Border>



        <!-- Overlay: File Moveprocess Popup Notification List -->
        <ItemsControl Grid.Row="1"
                      Grid.RowSpan="2"
                      Grid.ColumnSpan="2"
                      ItemsSource="{Binding FileMoveProcPopupNotificationList}">

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border Margin="0,0,0,10" 
                            Background="{DynamicResource MainWindowBackground}" 
                            BorderThickness="2"
                            BorderBrush="{DynamicResource CommonBorderBrushColor}"
                            CornerRadius="5" 
                            Padding="10" 
                            Width="300">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="15"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0"
                                       Grid.Row="0"
                                       Text="Zielordner: " 
                                       HorizontalAlignment="Left"
                                       Foreground="{DynamicResource CommonForegroundColor}"/>

                            <TextBlock Grid.Column="1"
                                       Grid.Row="0"
                                       Text="{Binding TargetPath}" 
                                       HorizontalAlignment="Left"
                                       Foreground="{DynamicResource CommonForegroundColor}"/>

                            <TextBlock Grid.Column="0"
                                       Grid.Row="1"
                                       Text="Datei: " 
                                       HorizontalAlignment="Left"
                                       Foreground="{DynamicResource CommonForegroundColor}"/>

                            <TextBlock Grid.Column="1"
                                       Grid.Row="1"
                                       Text="{Binding CurrentFileName}" 
                                       HorizontalAlignment="Left"
                                       Foreground="{DynamicResource CommonForegroundColor}"/>

                            <TextBlock Grid.Column="1"
                                       Grid.Row="1"
                                       HorizontalAlignment="Right"
                                       Foreground="{DynamicResource CommonForegroundColor}">
                                 <Run Text="("/>
                                 <Run Text="{Binding FileProcessed}"/>
                                 <Run Text="/"/>
                                 <Run Text="{Binding FileCount}"/>
                                 <Run Text=")"/>
                            </TextBlock>

                            <!--<Button Grid.Column="1"
                                        Grid.Row="0"
                                        Margin="0,0,0,0" 
                                        HorizontalAlignment="Right"
                                        Content="×" 
                                        Command="{Binding Cmd_ClosePopup}" />-->

                            <ProgressBar Grid.Column="0"
                                         Grid.Row="3" 
                                         Grid.ColumnSpan="2"
                                         Height="10"
                                         Value="{Binding FileProcessed}" 
                                         Maximum="{Binding FileCount}"/>

                        </Grid>
                    </Border>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsFadingOut}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </DataTemplate.Triggers>

                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.Style>
                <Style TargetType="ItemsControl">
                    <Setter Property="VerticalAlignment" Value="Bottom"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="Margin" Value="0,0,20,20"/>
                </Style>
            </ItemsControl.Style>
        </ItemsControl>

        <!-- Overlay Dlg: Start File Move process dialog -->
        <Grid Grid.Row="1"
              Grid.RowSpan="2"
              Grid.ColumnSpan="2"
              Background="#EF1B1D1F"
              Visibility="{Binding DialogOverlay_MoveFiles_Show, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}">

            <Border BorderThickness="2"
                    BorderBrush="{DynamicResource CommonBorderBrushColor}"
                    Background="{DynamicResource MainWindowBackground}"                
                    CornerRadius="15"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    MinWidth="20"
                    MinHeight="20"
                    Padding="15" 
                    SnapsToDevicePixels="True">

                <StackPanel Orientation="Horizontal">

                    <TextBlock Grid.Column="1"
                               Grid.Row="1"
                               Text="❔"
                               VerticalAlignment="Top"
                               FontSize="92"
                               Foreground="{DynamicResource CommonBorderBrushColor}"/>

                    <Grid Margin="20,0,0,0">
                        <Grid.RowDefinitions>
                            <!--Top distance -->
                            <RowDefinition Height="*"/>
                            <!--Titel-->
                            <RowDefinition Height="Auto"/>
                            <!--Top distance-->
                            <RowDefinition Height="15"/>
                            <!--Message Text-->
                            <RowDefinition Height="Auto"/>
                            <!--Top distance-->
                            <RowDefinition Height="25"/>
                            <!--Buttons-->
                            <RowDefinition Height="Auto"/>
                            <!--Bottom distance -->
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="1"
                                   Text="Frage"
                                   FontSize="20" 
                                   Foreground="{DynamicResource CommonBorderBrushColor}"
                                   FontWeight="Bold"/>

                        <TextBlock Grid.Row="3"
                                   MinWidth="100"
                                   MaxWidth="400"
                                   Foreground="{DynamicResource CommonForegroundColor}"
                                   TextWrapping="Wrap">

                             <Run Text="Sollen die ausgewählten "/>
                             <Run Text="{Binding DialogOverlay_MoveFiles_FileCount}"/>
                             <Run Text=" Dateien nach "/>
                             <Run Text="{Binding DialogOverlay_MoveFiles_ShortTargetPath}"/>
                             <Run Text=" verschoben werden?"/>
                        </TextBlock>

                        <Button Grid.Row="5"
                                HorizontalAlignment="Left"
                                Style="{StaticResource DialogboxButtonStyle}" 
                                Tag="&#xE10B;"
                                Content="Verschieben"
                                Command="{Binding Cmd_Dlg_StartFileMoveProcess}"/>

                        <Button Grid.Row="5"
                                HorizontalAlignment="Right"
                                Style="{StaticResource DialogboxButtonStyle}" 
                                Tag="&#xE10A;"
                                Content="Abbrechen"
                                Command="{Binding Cmd_Dlg_AbortStartFileMoveProcess}"/>

                    </Grid>

                </StackPanel>

                <!--<Border.Effect>
                <DropShadowEffect ShadowDepth="0"                                                 
                                      BlurRadius="10"                                                                                       
                                      Color="WhiteSmoke"/>
            </Border.Effect>-->

            </Border>

        </Grid>

        <!-- Overlay Dlg: Ask for HECI file process dialog -->
        <Grid Grid.Row="1"
              Grid.RowSpan="2"
              Grid.ColumnSpan="2"
              Background="#EF1B1D1F"
              Visibility="{Binding DialogOverlay_ProcessHeicImages_Show, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}">

            <Border BorderThickness="2"
                BorderBrush="{DynamicResource CommonBorderBrushColor}"
                Background="{DynamicResource MainWindowBackground}"                
                CornerRadius="15"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                MinWidth="20"
                MinHeight="20"
                Padding="15" 
                SnapsToDevicePixels="True">

                <StackPanel Orientation="Horizontal">

                    <TextBlock Grid.Column="1"
                       Grid.Row="1"
                       Text="❔"
                       VerticalAlignment="Top"
                       FontSize="92"
                       Foreground="{DynamicResource CommonBorderBrushColor}"/>

                    <Grid Margin="20,0,0,0">
                        <Grid.RowDefinitions>
                            <!--Top distance -->
                            <RowDefinition Height="*"/>
                            <!--Titel-->
                            <RowDefinition Height="Auto"/>
                            <!--Top distance-->
                            <RowDefinition Height="15"/>
                            <!--Message Text-->
                            <RowDefinition Height="Auto"/>
                            <!--Top distance-->
                            <RowDefinition Height="25"/>
                            <!--Buttons-->
                            <RowDefinition Height="Auto"/>
                            <!--Bottom distance -->
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="1"
                           Text="Frage"
                           FontSize="20" 
                           Foreground="{DynamicResource CommonBorderBrushColor}"
                           FontWeight="Bold"/>

                        <TextBlock Grid.Row="3"
                           MinWidth="100"
                           MaxWidth="400"
                           Foreground="{DynamicResource CommonForegroundColor}"
                           TextWrapping="Wrap">
                            
                            <Run Text="Es sind Apple HiRes Bilder (HEIC) vorhanden. Das erstmalige laden dieser Bilder kann einige Zeit in Anspruch nehmen."/>
                            <LineBreak/>
                            <LineBreak/>
                            <Run Text="Soll der Inhalt diese Bilder angezeigt werden?"/>

                        </TextBlock>

                        <Button Grid.Row="5"
                            HorizontalAlignment="Left"
                            Style="{StaticResource DialogboxButtonStyle}" 
                            Tag="&#xE10B;"
                            Content="Ja"
                            Command="{Binding Cmd_Dlg_ProcessHeicImages}"/>

                        <Button Grid.Row="5"
                            HorizontalAlignment="Right"
                            Style="{StaticResource DialogboxButtonStyle}" 
                            Tag="&#xE10A;"
                            Content="Nein"
                            Command="{Binding Cmd_Dlg_DontProcessHeicImages}"/>

                    </Grid>

                </StackPanel>

                <!--<Border.Effect>
                    <DropShadowEffect ShadowDepth="0"                                                 
                        BlurRadius="10"                                                                                       
                        Color="WhiteSmoke"/>
                </Border.Effect>-->

            </Border>

        </Grid>
    </Grid>
</Window>
