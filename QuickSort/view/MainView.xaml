<Window x:Class="QuickSort.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QuickSort.View"
        xmlns:con="clr-namespace:QuickSort.Converter"
        xmlns:vr="clr-namespace:QuickSort.ValidationRules"
        xmlns:userControl="clr-namespace:QuickSort.view.UserControls"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:LocalizeDictionary.DesignCulture="en"
        lex:ResxLocalizationProvider.DefaultAssembly="QuickSort"
        lex:ResxLocalizationProvider.DefaultDictionary="Strings"
        mc:Ignorable="d"
        Title="Dateiauswahl" 
        Height="800" 
        Width="1000"
        Background="{DynamicResource MainWindowBackground}"
        WindowStyle="None"
        ResizeMode="CanResizeWithGrip" Icon="/icloud-logo-49272-Windows.ico" >

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <con:InverseBooleanToVisibilityConverter x:Key="InvBoolToVis"/>
        <con:Int2GridLengthConverter x:Key="IntToGridLen"/>
        <con:Int2Visibility x:Key="IntToVis"/>

        <!-- File Titles Context Menu Style -->
        <Style x:Key="CustomContextMenuStyle" TargetType="ContextMenu">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">

                        <Border x:Name="Border"
                                BorderBrush="{DynamicResource ContextMenuBorderBrushColor}" 
                                BorderThickness="2" 
                                Background="{DynamicResource ContextMenuBackgroundColor}"
                                Padding="10"
                                CornerRadius="5">

                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="CustomMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{DynamicResource ContextMenuBtnBackgroundColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource ContextMenuBtnTextColor}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="OUTER_BORDER"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10">

                            <StackPanel Orientation="Horizontal">

                                <TextBlock x:Name="SYMBOL_TEXT"
                                           Text="{TemplateBinding Tag}" 
                                           Foreground="{DynamicResource ContextMenuBtnSymbolColor}" 
                                           FontFamily="Segoe UI Symbol" 
                                           FontSize="{TemplateBinding FontSize}" 
                                           Margin="0"
                                           VerticalAlignment="Center"/>

                                <TextBlock x:Name="LABEL_TEXT"
                                           Margin="0"
                                           Padding="0">
                                    
                                    <ContentPresenter Margin="{TemplateBinding Padding}" 
                                        VerticalAlignment="Center"
                                        ContentSource="Header"/>

                                </TextBlock>

                            </StackPanel>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource ContextMenuBtnSymbolColor}"/>
                                <Setter TargetName="SYMBOL_TEXT" Property="Foreground" Value="{DynamicResource ContextMenuBtnMouseOverTextColor}"/>
                                <Setter TargetName="LABEL_TEXT" Property="Foreground" Value="{DynamicResource ContextMenuBtnMouseOverTextColor}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="OUTER_BORDER" Property="Visibility" Value="Collapsed"/>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Tooltip-Style -->
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">

                        <Border Name="Border"
                                BorderBrush="{DynamicResource ToolTipBorderBrushColor}" 
                                BorderThickness="2" 
                                Background="{DynamicResource ToolTipBackgroundColor}"
                                CornerRadius="5"
                                Padding="10"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">

                            <TextBlock Foreground="{DynamicResource ToolTipTextColor}">
                                <ContentPresenter HorizontalAlignment="Left"
                                                  VerticalAlignment="Top"/>
                            </TextBlock>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="CornerRadius" Value="5" />
                                <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar-Style -->
        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid x:Name="BgGrid" 
                                          Background="Transparent"
                                          SnapsToDevicePixels="true">

                            <Border x:Name="ThumbLine"
                                                Width="1" 
                                                Background="#FF7D7D86" 
                                                HorizontalAlignment="Center"/>

                            <Track x:Name="PART_Track"
                                               IsDirectionReversed="true" 
                                               Focusable="False">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.LineUpCommand" 
                                                              Style="{x:Null}" 
                                                              IsTabStop="False" 
                                                              Opacity="0"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>

                                    <Thumb x:Name="Thumb"
                                                       OverridesDefaultStyle ="True"
                                                       IsTabStop ="False"
                                                       Foreground="#FF616469">

                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Rectangle x:Name="ThumbRec"
                                                                       Height="35" 
                                                                       Width="8" 
                                                                       Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Thumb}}" 
                                                                       RadiusX="5" 
                                                                       RadiusY="5">
                                                    <Rectangle.Effect>
                                                        <DropShadowEffect ShadowDepth="0" 
                                                                                      BlurRadius="10" 
                                                                                      Color="#FF616469" />
                                                    </Rectangle.Effect>
                                                </Rectangle>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>

                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.LineDownCommand" 
                                                              Style="{x:Null}" 
                                                              IsTabStop="False" 
                                                              Opacity="0"/>
                                </Track.IncreaseRepeatButton>
                            </Track>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Thumb" Property="Foreground" Value="#FF4A90E2"/>
                                <Setter TargetName="ThumbLine" Property="Background" Value="#FF2A578C"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Thumb" Property="Opacity" Value="0.3"/>
                                <Setter TargetName="ThumbLine" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Favorite Target Folder Item Button-Style -->
        <Style x:Key="FavoriteTargetFolderItemButtonStyle" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="175"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Border x:Name="OUTER_BORDER"
                                BorderBrush="{DynamicResource FavoriteTargetFolderBtnBackgroundColor}"
                                BorderThickness="2"
                                Background="{DynamicResource FavoriteTargetFolderBtnBackgroundColor}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10">
                            <Grid>
                                <Path Data="M10,2 L12.94,7.63 L19,8.27 L14,12.14 L15.18,18.02 L10,15 L4.82,18.02 L6,12.14 L1,8.27 L7.06,7.63 Z"
                                      Stroke="{DynamicResource FavoriteTargetFolderBtnPinnedColor}"
                                      StrokeThickness="2"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Top"                                      
                                      Visibility="{Binding IsPinned, Converter={StaticResource BoolToVis}}"/>

                                <StackPanel Orientation="Horizontal" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Center">

                                    <TextBlock Text="&#xE1C1;" 
                                           Foreground="{DynamicResource FavoriteTargetFolderBtnSymbolColor}" 
                                           FontSize="{TemplateBinding FontSize}" 
                                           FontFamily="Segoe UI Symbol" 
                                           Margin="0,0,10,0"
                                           VerticalAlignment="Center"/>

                                    <TextBlock Text="{Binding DisplayName}" 
                                           Foreground="{DynamicResource FavoriteTargetFolderBtnTextColor}" 
                                           FontSize="{TemplateBinding FontSize}" 
                                           FontFamily="{TemplateBinding FontFamily}" 
                                           FontWeight="DemiBold"
                                           VerticalAlignment="Center"/>

                                </StackPanel>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource FavoriteTargetFolderBtnMouseOverColor}"/>
                                <Setter TargetName="OUTER_BORDER" Property="BorderBrush" Value="{DynamicResource FavoriteTargetFolderBtnMouseOverColor}"/>
                            </Trigger>

                            <DataTrigger Binding="{Binding IsPinned}" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="BorderBrush" Value="{DynamicResource FavoriteTargetFolderBtnPinnedColor}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- File Title Button-Style -->
        <Style x:Key="FileTitleButtonStyle" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Border x:Name="OUTER_BORDER" 
                                CornerRadius="5"
                                Background="{DynamicResource FileTitleBtnBackgroundColor}"
                                Padding="{TemplateBinding Padding}" 
                                Margin="{TemplateBinding Margin}">

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Image x:Name="PART_IMAGE"
                                    Grid.Row="0" 
                                    Source="{Binding Thumbnail}" 
                                    Stretch="Uniform"/>

                                <TextBlock x:Name="PART_FILENAMETEXT"
                                   Grid.Row="1"
                                   Text="{Binding DisplayName}" 
                                   Margin="0,5,0,5"
                                   TextAlignment="Center" 
                                   Foreground="{DynamicResource FileTitleBtnTextColor}" 
                                   FontSize="12" 
                                   TextTrimming="CharacterEllipsis"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Remember:
                                    •	Control-Property → RelativeSource=Self (E.g. Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" to access a button property)
                                    •	Data-Property (from ViewModel/Model) → simply {Binding ...} (E.g. Binding="{Binding IsSelected}") -->

                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="PART_FILENAMETEXT" Property="Foreground" Value="{DynamicResource FileTitleBtnSelectedTextColor}"/>
                                <Setter TargetName="OUTER_BORDER" Property="BorderBrush" Value="{DynamicResource FileTitleBtnSelectedColor}"/>
                                <Setter TargetName="OUTER_BORDER" Property="BorderThickness" Value="5"/>
                                <Setter TargetName="OUTER_BORDER" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="{DynamicResource FileTitleBtnSelectedColorColor}" Offset="1" />
                                                <GradientStop Color="{DynamicResource FileTitleBtnSelected2ColorColor}" Offset="0.5" />
                                                <GradientStop Color="{DynamicResource FileTitleBtnSelected2ColorColor}" Offset="0" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource FileTitleBtnMouseOverColor}"/>
                            </Trigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <!-- Remember:
                                        •	Control-Property → RelativeSource=Self (E.g. Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" to access a button property)
                                        •	Data-Property (from ViewModel/Model) → simply {Binding ...} (E.g. Binding="{Binding IsSelected}") -->

                                    <!--Binding to the Control / Button properties:-->
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="true" />
                                    <!--Binding to the DataContext (MainViewModel) property IsSelected:-->
                                    <Condition Binding="{Binding IsSelected}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_FILENAMETEXT" Property="Foreground" Value="{DynamicResource FileTitleBtnTextColor}"/>
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding HideFilenameText}" Value="True">
                                <Setter TargetName="PART_FILENAMETEXT" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsSysIconImage}" Value="True">
                                <Setter TargetName="PART_IMAGE" Property="Height" Value="32"/>
                                <Setter TargetName="PART_IMAGE" Property="Width" Value="32"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Virtual Directory Button-Style -->
        <Style x:Key="VirtualRootDirectoryButtonStyle" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Border x:Name="OUTER_BORDER"
                                Background="{DynamicResource VirtualDirectoryBtnBackgroundColor}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10">
                            <Grid>
                                <StackPanel Orientation="Horizontal" 
                                            HorizontalAlignment="Left" 
                                            VerticalAlignment="Center">

                                    <TextBlock x:Name="SYMBOL_LABEL"
                                               Text="&#xE1C1;" 
                                               Foreground="{DynamicResource VirtualDirectoryBtnSymbolColor}" 
                                               FontSize="{TemplateBinding FontSize}" 
                                               FontFamily="Segoe UI Symbol" 
                                               Margin="0,0,10,0"
                                               VerticalAlignment="Center"/>

                                    <TextBlock x:Name="TEXT_LABEL"
                                               Text="{Binding DisplayName}" 
                                               Foreground="{DynamicResource VirtualDirectoryBtnTextColor}" 
                                               FontSize="{TemplateBinding FontSize}" 
                                               FontFamily="{TemplateBinding FontFamily}"
                                               FontWeight="DemiBold"
                                               VerticalAlignment="Center"/>

                                </StackPanel>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource VirtualDirectoryBtnSelectedColor}"/>
                                <Setter TargetName="SYMBOL_LABEL" Property="Foreground" Value="{DynamicResource VirtualDirectoryBtnSelectedTextColor}"/>
                                <Setter TargetName="TEXT_LABEL" Property="Foreground" Value="{DynamicResource VirtualDirectoryBtnSelectedTextColor}"/>
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="OUTER_BORDER" Property="Background" Value="{DynamicResource VirtualDirectoryBtnMouseOverColor}"/>
                                <Setter TargetName="SYMBOL_LABEL" Property="Foreground" Value="{DynamicResource VirtualDirectoryBtnSymbolColor}"/>
                                <Setter TargetName="TEXT_LABEL" Property="Foreground" Value="{DynamicResource VirtualDirectoryBtnTextColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox-Style -->
        <Style TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Row="0"
                                    Grid.Column="0"
                                    BorderBrush="Red" 
                                    BorderThickness="2">
                                <AdornedElementPlaceholder x:Name="placeholder"/>
                            </Border>

                            <TextBlock Grid.Row="1"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Foreground="Red"
                                       Margin="0,2,0,0"
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="Top"
                                       FontWeight="DemiBold"
                                       Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            </TextBlock>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Symbol Button-Style -->
        <Style x:Key="SymbolButton" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <TextBlock Name="PART_TEXT"
                                   Text="{TemplateBinding Content}"
                                   FontFamily="Segoe UI Symbol" 
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Center" 
                                   Foreground="{TemplateBinding Foreground}"/>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="PART_TEXT" Value="{DynamicResource CommonForegroundColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+A" Command="{Binding Cmd_ContextMenu_SelectAllFileTitles}" />
        <!--<KeyBinding Key="A" Modifiers="Ctrl" Command="{Binding Cmd_ContextMenu_SelectAllFileTitles}" />-->
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Window Title bar section -->
        <Grid Grid.Row="0"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              MouseLeftButtonDown="Grid_MouseLeftButtonDown"
              Cursor="Hand"
              Background="{DynamicResource CommonBorderBrushColor}">


            <!-- Configwindow -->
            <Button Width="32" 
                    Height="32"
                    Margin="0,0,5,0"
                    Background="Transparent" 
                    BorderThickness="0"
                    HorizontalAlignment="Left"
                    Command="{Binding Cmd_ShowConfigWindow}">

                <TextBlock Text="&#xE115;"
                           FontFamily="Segoe UI Symbol" 
                           FontSize="18" 
                           VerticalAlignment="Center" 
                           HorizontalAlignment="Center" 
                           Foreground="White"/>
            </Button>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5">

                <!-- Minimize -->
                <Button Width="32"
                        Height="32" 
                        Margin="0,0,5,0"
                        Background="Transparent" 
                        BorderThickness="0"
                        Command="{Binding Cmd_ApplicationMinimize}">

                    <TextBlock Text="━"
                               FontSize="16" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               Foreground="White"/>
                </Button>

                <!-- Maximize / Restore -->
                <Button Width="32" 
                        Height="32"
                        Background="Transparent" 
                        BorderThickness="0"
                        Command="{Binding Cmd_ApplicationMaximizeRestore}">
                    <TextBlock Text="▢" 
                               FontSize="16" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               Foreground="White"/>
                </Button>

                <!-- Close -->
                <Button Width="32" 
                        Height="32" 
                        Margin="0,0,5,0"
                        Background="Transparent" 
                        BorderThickness="0"
                        Command="{Binding Cmd_ApplicationClose}">

                    <TextBlock Text="✕" 
                               FontSize="18" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               Foreground="White"/>
                </Button>
            </StackPanel>

        </Grid>

        <!-- Favorite Target Folder Section -->
        <Border Grid.Row="1"
                Grid.Column="0"
                Margin="10"
                Width="230"                               
                Background="{DynamicResource FavoriteTargetFolderBackgroundColor}"
                BorderBrush="{DynamicResource FavoriteTargetFolderSeperatorColor}"
                BorderThickness="1"
                CornerRadius="5">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0"
                            Orientation="Horizontal"
                            Margin="20,20,20,0">

                    <TextBlock Foreground="{DynamicResource FavoriteTargetFolderTitleTextForegroundColor}"
                               FontSize="14" 
                               FontWeight="Bold"
                               VerticalAlignment="Top"
                               HorizontalAlignment="Left"
                               Name="tbFavTargFolder_Title"
                               Text="{lex:Loc}">
                    </TextBlock>

                    <Button Style="{StaticResource SymbolButton}"
                            Margin="5,0,0,0"
                            Foreground="{DynamicResource FavoriteTargetFolderBtnSymbolColor}"
                            FontSize="9" 
                            FontWeight="Light"
                            Content="&#xE0C5;"
                            Command="{Binding Cmd_ContextMenu_AddFavoriteTargetFolderItem}"
                            CommandParameter="{Binding}"/>
                </StackPanel>

                <ItemsControl Grid.Row="1"
                              Margin="20,10,0,0"
                              ItemsSource="{Binding FavoriteTargetFolderList}">

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" 
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>

                            <Button Style="{StaticResource FavoriteTargetFolderItemButtonStyle}"
                                    Margin="5" 
                                    Padding="5"                    
                                                                     
                                    ToolTip="{Binding ToolTip}"
                                                                     
                                    Command="{Binding DataContext.Cmd_ClickOnFavoriteTargetFolderClick, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="{Binding}">

                                <Button.ContextMenu>
                                    <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                        <!--Irgenwie funktioniert das mit dem CommandoBinding nicht: Die Kommando-Properties sind im Viewmodel abgelegt. 
                                            um darauf zuzugreifen, muss mus der Datencontext der Items, die in der ItemsControl-Liste
                                            Angezeit werden, geändert werden. Diese Items haben (DataTemplate) einen geänderten Datencontext; der zeigt jeweils auf 
                                            eine Instanz des FileTile-Model. Irgenwie kann das Binding nicht aufgelöst werden. 
                                            Workaround: Die FileTile-Model Klasse stellt ebenfalls die Kommando-Properties bereit.-->

                                        <!--<MenuItem Header="Favorit Test"
                                                  Style="{StaticResource CustomMenuItemStyle}"
                                                  Command="{Binding DataContext.Cmd_ContextMenu_RemoveTargetFolder, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                  CommandParameter="{Binding}" />-->

                                        <!--<MenuItem Header="Favorit Test"
                                                  Style="{StaticResource CustomMenuItemStyle}"
                                                  DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                                                  Command="{Binding Cmd_ContextMenu_RemoveTargetFolder}"
                                                  CommandParameter="{Binding}" />-->

                                        <MenuItem Name="cmFavTargFolder_MoveImageHere" 
                                                  Header="{lex:Loc cmFavTargFolder_MoveImageHere}"
                                                  Style="{StaticResource CustomMenuItemStyle}"
                                                  Tag="&#xE16D;"
                                                  Command="{Binding Cmd_MoveImagesCommand}"
                                                  CommandParameter="{Binding}"/>

                                        <MenuItem Name="cmFavTargFolder_AddEntry" 
                                                  Header="{lex:Loc cmFavTargFolder_AddEntry}"
                                                  Style="{StaticResource CustomMenuItemStyle}"
                                                  Tag="&#xE0C5;"
                                                  Command="{Binding Cmd_AddFolderFromListCommand}"
                                                  CommandParameter="{Binding}"/>

                                        <MenuItem Name="cmFavTargFolder_RemoveEntry" 
                                                  Header="{lex:Loc cmFavTargFolder_RemoveEntry}"
                                                  Style="{StaticResource CustomMenuItemStyle}"
                                                  Tag="&#xE0C6;"
                                                  Command="{Binding Cmd_RemoveFolderFromListCommand}"
                                                  CommandParameter="{Binding}"/>

                                        <MenuItem Name="cmFavTargFolder_SetBookmark" 
                                                  Header="{lex:Loc cmFavTargFolder_SetBookmark}"
                                                  Style="{StaticResource CustomMenuItemStyle}"
                                                  Tag="&#xE1CF;"
                                                  Command="{Binding Cmd_SetTargetFolderAsFavorite}"/>

                                        <!--Alternative symbol: &#xE1CE;-->
                                        <MenuItem Name="cmFavTargFolder_RemoveBookmark" 
                                                  Header="{lex:Loc cmFavTargFolder_RemoveBookmark}"
                                                  Style="{StaticResource CustomMenuItemStyle}"
                                                  Tag="&#xE195;"
                                                  Command="{Binding Cmd_ClearTargetFolderFavorite}"/>

                                    </ContextMenu>
                                </Button.ContextMenu>

                            </Button>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>

                <TextBlock Grid.Row="1"
                           Foreground="{DynamicResource FavoriteTargetFolderTitleTextForegroundColor}"
                           FontSize="12"                       
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontWeight="Light" 
                           FontStyle="Italic"
                           TextWrapping="Wrap"
                           Visibility="{Binding FavoriteTargetFolderList.Count, Converter={StaticResource IntToVis}, ConverterParameter='visible;collapsed', FallbackValue='Visible'}"
                           Name="tbFavTargFolder_NoItemText"
                           Text="{lex:Loc}"/>

            </Grid>

            <Border.ContextMenu>
                <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                    <MenuItem Name="cmFavTargFolder_AddEntry2"
                              Header="{lex:Loc}"
                              Style="{StaticResource CustomMenuItemStyle}"
                              Tag="&#xE0C5;"
                              Command="{Binding Cmd_ContextMenu_AddFavoriteTargetFolderItem}"
                              CommandParameter="{Binding}"/>

                </ContextMenu>
            </Border.ContextMenu>

        </Border>

        <!-- File Titles Section -->
        <Border Grid.Row="1"
                Grid.Column="1"
                Margin="10"
                Background="{DynamicResource FileTitleBackgroundColor}"
                BorderThickness="0"
                BorderBrush="{DynamicResource FileTitleSeperatorColor}">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Margin="20,20,20,0"
                           Foreground="{DynamicResource FileTitleTextForegroundColor}"
                           FontSize="14" 
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           Name="tbFileTitleSec_Title"
                           Text="{lex:Loc}"/>

                <StackPanel Grid.Row="0"
                            Grid.RowSpan="2"
                            Orientation="Horizontal"
                            Margin="20,20,00,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top">

                    <Button Style="{StaticResource SymbolButton}"
                            Margin="5,0,0,0"
                            Foreground="{DynamicResource FileTitleBtnSelectedColor}"
                            FontSize="16" 
                            FontWeight="Light"
                            Content="&#xE12E;"
                            Name="ttFileTitleSec_ButtonSmalIconSize"
                            ToolTip="{lex:Loc}"
                            Command="{Binding Cmd_ContextMenu_SetFileTitleSize}"
                            CommandParameter="0"/>

                    <Button Style="{StaticResource SymbolButton}"
                            Margin="5,0,0,0"
                            Foreground="{DynamicResource FileTitleBtnSelectedColor}"
                            FontSize="16" 
                            FontWeight="Light"
                            Content="&#xE12E;"
                            Name="ttFileTitleSec_ButtonMediumIconSize"
                            ToolTip="{lex:Loc}"
                            Command="{Binding Cmd_ContextMenu_SetFileTitleSize}"
                            CommandParameter="1"/>

                    <Button Style="{StaticResource SymbolButton}"
                            Margin="5,0,0,0"
                            Foreground="{DynamicResource FileTitleBtnSelectedColor}"
                            FontSize="16" 
                            FontWeight="Light"
                            Content="&#xE12E;"
                            Name="ttFileTitleSec_ButtonLargeIconSize"
                            ToolTip="{lex:Loc}"
                            Command="{Binding Cmd_ContextMenu_SetFileTitleSize}"
                            CommandParameter="2"/>

                    <Button Style="{StaticResource SymbolButton}"
                            Margin="15,0,0,0"
                            Foreground="{DynamicResource FileTitleBtnSelectedColor}"
                            FontSize="14" 
                            FontWeight="Light"
                            Content="&#xE1EF;"
                            Name="ttFileTitleSec_ButtonSelectAll"
                            ToolTip="{lex:Loc}"
                            Command="{Binding Cmd_ContextMenu_SelectAllFileTitles}"
                            CommandParameter="{Binding}"/>

                    <Button Style="{StaticResource SymbolButton}"
                            Margin="5,0,0,0"
                            Foreground="{DynamicResource FileTitleBtnSelectedColor}"
                            FontSize="14" 
                            FontWeight="Light"
                            Content="&#xE1EC;"
                            Name="ttFileTitleSec_ButtonDeselectAll"
                            ToolTip="{lex:Loc}"
                            Command="{Binding Cmd_ContextMenu_UnSelectAllFileTitles}"
                            CommandParameter="{Binding}"/>

                    <Button Style="{StaticResource SymbolButton}"
                            Margin="15,0,0,0"
                            Foreground="{DynamicResource FileTitleBtnSelectedColor}"
                            FontSize="16" 
                            FontWeight="Light"
                            Content="&#xE115;"
                            Name="ttFileTitleSec_Buttonsettings"
                            ToolTip="{lex:Loc}"
                            Command="{Binding Cmd_ShowConfigWindow}"
                            CommandParameter="{Binding}"/>
                </StackPanel>

                <TextBlock Grid.Row="1"
                           Margin="20,10,0,0"
                           Foreground="{DynamicResource FileTitleTextForegroundColor}"
                           FontSize="12"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left" 
                           FontFamily="Segoe UI Light"
                           Visibility="{Binding FileTitleLoadStatus_Show, Converter={StaticResource InvBoolToVis}, FallbackValue='Visible'}"
                           Text="{Binding FileTileStatusText, FallbackValue='1 Bild ausgewählt'}"/>

                <ScrollViewer Grid.Row="2" 
                              Margin="20,20,20,20">
                    <ItemsControl ItemsSource="{Binding FileTileList}">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <Button Style="{StaticResource FileTitleButtonStyle}"
                                    Width="{Binding Width}"
                                    Height="{Binding Height}"
                                    Margin="5"                                                        
                                                                                                                                                                     
                                    ToolTip="{Binding ToolTip}"
                                    
                                    Command="{Binding DataContext.Cmd_ClickOnFileTitleItem, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="{Binding}"/>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                    </ItemsControl>
                </ScrollViewer>

                <Grid Grid.Row="2"
                      Visibility="{Binding FileTileList.Count, Converter={StaticResource IntToVis}, ConverterParameter='visible;collapsed', FallbackValue='Hidden'}">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Image Grid.Row="0"
                           Source="/fotocloud_logo.png"
                           Opacity="0.5"
                           Margin="0,20,0,20"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>

                    <TextBlock Grid.Row="1"
                               Foreground="{DynamicResource FileTitleTextForegroundColor}"
                               FontSize="12"                       
                               FontWeight="Light" 
                               FontStyle="Italic"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Name="tbFileTitleSec_NoItemText"
                               Text="{lex:Loc}"/>

                </Grid>

                <Border Grid.Row="0"
                        Grid.RowSpan="3"
                        Margin="0,50,0,0"
                        Width="300"
                        Padding="20,10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"                        
                        BorderBrush="{DynamicResource CommonBorderBrushColor}"
                        Background="{DynamicResource ToolTipBackgroundColor}"
                        BorderThickness="2"
                        CornerRadius="5"
                        Visibility="{Binding FileTitleLoadStatus_Show, Converter={StaticResource BoolToVis}, FallbackValue='Visible'}">

                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">

                        <TextBlock Foreground="{DynamicResource CommonBorderBrushColor}"
                           FontSize="14"
                           FontWeight="SemiBold"                           
                           Text="{Binding FileTitleLoadStatus_Text, FallbackValue='Bilder werden geladen... (1/20)'}" FontStyle="Italic"/>

                        <!-- ToDo: Place a Spinner Animation here -->

                    </StackPanel>

                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0"                                                 
                                          BlurRadius="10"                                                                                       
                                          Color="{DynamicResource ToolTipBackgroundColorColor}"/>
                    </Border.Effect>

                </Border>

            </Grid>

            <Border.ContextMenu>
                <ContextMenu Style="{StaticResource CustomContextMenuStyle}">
                    <MenuItem Name="cmFileTitleSec_SelectAll"
                              Header="{lex:Loc}" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE1EF;"
                              Command="{Binding Cmd_ContextMenu_SelectAllFileTitles}"/>

                    <MenuItem Name="cmFileTitleSec_DeSelectAll"
                              Header="{lex:Loc}" 
                              Style="{StaticResource CustomMenuItemStyle}"                               
                              Tag="&#xE1EC;"
                              Command="{Binding Cmd_ContextMenu_UnSelectAllFileTitles}"/>

                    <MenuItem Name="cmFileTitleSec_ButtonSmalIconSize"
                              Header="{lex:Loc}" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE12E;"
                              Command="{Binding Cmd_ContextMenu_SetFileTitleSize}" 
                              CommandParameter="0"/>

                    <MenuItem Name="cmFileTitleSec_ButtonMediumIconSize"
                              Header="{lex:Loc}" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE12E;"
                              Command="{Binding Cmd_ContextMenu_SetFileTitleSize}"
                              CommandParameter="1"/>

                    <MenuItem Name="cmFileTitleSec_ButtonLargeIconSize"
                              Header="{lex:Loc}" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE12E;"
                              Command="{Binding Cmd_ContextMenu_SetFileTitleSize}" 
                              CommandParameter="2"/>

                    <MenuItem Name="cmFileTitleSec_RefreshView"
                              Header="{lex:Loc}" 
                              Style="{StaticResource CustomMenuItemStyle}" 
                              Tag="&#xE117;"
                              Command="{Binding Cmd_ContextMenu_RefreshFileTitleList}"
                              CommandParameter="2"/>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>

        <!-- Virtual Directory Section -->
        <Border Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Height="250"
                Margin="10,0,10,10"
                Background="{DynamicResource VirtualDirectoryBackgroundColor}"
                BorderBrush="{DynamicResource VirtualDirectorySeperatorColor}"
                BorderThickness="1"
                CornerRadius="5">

            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0"
                            Orientation="Horizontal"
                            Margin="20,20,0,0">

                    <TextBlock Foreground="{DynamicResource VirtualDirectoryTitleTextForegroundColor}"
                               FontSize="14" 
                               FontWeight="Bold"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Name="tbVirtualDirSec_Title"
                               Text="{lex:Loc}"/>

                    <Button Style="{StaticResource SymbolButton}"
                            Margin="5,0,0,0"
                            Foreground="{DynamicResource VirtualDirectoryBtnSymbolColor}"
                            FontSize="9" 
                            FontWeight="Light"
                            Content="&#xE0C5;"
                            Command="{Binding Cmd_ContextMenu_AddVirtualRootDirectoryItem}"
                            CommandParameter="{Binding}"/>

                </StackPanel>

                <Grid Grid.Row="1"
                      Margin="20,10,20,20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding VirtualRootDirectoryList.Count, Converter={StaticResource IntToGridLen}, ConverterParameter='100*;Auto', FallbackValue='Auto'}"/>

                        <ColumnDefinition Width="{Binding VirtualFirstStageDirectoryList.Count, Converter={StaticResource IntToGridLen}, ConverterParameter='0;Auto', FallbackValue='Auto'}"/>
                        <ColumnDefinition Width="{Binding VirtualFirstStageDirectoryList.Count, Converter={StaticResource IntToGridLen}, ConverterParameter='0*;100*', FallbackValue='100*'}"/>

                        <ColumnDefinition Width="{Binding VirtualSecundStageDirectoryList.Count, Converter={StaticResource IntToGridLen}, ConverterParameter='0;Auto', FallbackValue='Auto'}"/>
                        <ColumnDefinition Width="{Binding VirtualSecundStageDirectoryList.Count, Converter={StaticResource IntToGridLen}, ConverterParameter='0*;Auto', FallbackValue='100*'}"/>
                    </Grid.ColumnDefinitions>

                    <!-- Virtual Root Directory List -->
                    <ScrollViewer Grid.Column="0"
                              Margin="0">
                        <ItemsControl ItemsSource="{Binding VirtualRootDirectoryList}">

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>

                                    <Button Style="{StaticResource VirtualRootDirectoryButtonStyle}"
                                        Margin="5"                                                        
                                                                                                                                                                                    
                                        ToolTip="{Binding ToolTip}"
                                        
                                        Command="{Binding DataContext.Cmd_ClickOnVirtualRootDirectoryItem, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}">

                                        <Button.ContextMenu>
                                            <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                                <!--Irgenwie funktioniert das mit dem CommandoBinding nicht: Die Kommando-Properties sind im Viewmodel abgelegt. 
                                                um darauf zuzugreifen, muss mus der Datencontext der Items, die in der ItemsControl-Liste
                                                Angezeit werden, geändert werden. Diese Items haben (DataTemplate) einen geänderten Datencontext; der zeigt jeweils auf 
                                                eine Instanz des FileTile-Model. Irgenwie kann das Binding nicht aufgelöst werden. 
                                                Workaround: Die FileTile-Model Klasse stellt ebenfalls die Kommando-Properties bereit.-->

                                                <!--<MenuItem Header="Favorit Test"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                Command="{Binding DataContext.Cmd_ContextMenu_RemoveTargetFolder, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}" />-->

                                                <!--<MenuItem Header="Favorit Test"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                                                Command="{Binding Cmd_ContextMenu_RemoveTargetFolder}"
                                                CommandParameter="{Binding}" />-->

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_MoveImageHere}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE16D;"
                                                          Command="{Binding Cmd_MoveImagesCommand}"
                                                          CommandParameter="{Binding}"/>

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_OpenFolder}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE19C;"
                                                          Command="{Binding Cmd_ShowSubDirsCommand}"
                                                          CommandParameter="{Binding}"/>

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_CreateSubFolder}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE1DA;"
                                                          Command="{Binding Cmd_CreateSubDirsCommand}"
                                                          CommandParameter="{Binding}"/>

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_AddEntry2}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE0C5;"
                                                          Command="{Binding Cmd_AddToListCommand}"
                                                          CommandParameter="{Binding}"/>

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_RemoveEntry}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE0C6;"
                                                          Command="{Binding Cmd_RemoveItemFromListCommand}"
                                                          CommandParameter="{Binding}"/>

                                            </ContextMenu>
                                        </Button.ContextMenu>

                                    </Button>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                        </ItemsControl>

                        <ScrollViewer.ContextMenu>
                            <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                <MenuItem Name="cmVirtualDirSec_AddEntry"
                                          Header="{lex:Loc}"
                                          Style="{StaticResource CustomMenuItemStyle}"
                                          Tag="&#xE0C5;"
                                          Command="{Binding Cmd_ContextMenu_AddVirtualRootDirectoryItem}"
                                          CommandParameter="{Binding}"/>

                            </ContextMenu>
                        </ScrollViewer.ContextMenu>
                    </ScrollViewer>

                    <!-- 1st Stage Directory Content List -->
                    <Rectangle Grid.Column="1"
                           Width="1"
                           Fill="{DynamicResource VirtualDirectorySeperatorColor}" 
                           HorizontalAlignment="Left" 
                           Margin="0,1,10,0"/>

                    <ScrollViewer Grid.Column="2" >
                        <ItemsControl ItemsSource="{Binding VirtualFirstStageDirectoryList}">

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>

                                    <Button Style="{StaticResource VirtualRootDirectoryButtonStyle}"
                                    Margin="5"                                                        
                                                                                                                                            
                                    ToolTip="{Binding ToolTip}"
                                        
                                    Command="{Binding DataContext.Cmd_ClickOnVirtualFirstStagDirectoryItem, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="{Binding}">

                                        <Button.ContextMenu>
                                            <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                                <!--Irgenwie funktioniert das mit dem CommandoBinding nicht: Die Kommando-Properties sind im Viewmodel abgelegt. 
                                            um darauf zuzugreifen, muss mus der Datencontext der Items, die in der ItemsControl-Liste
                                            Angezeit werden, geändert werden. Diese Items haben (DataTemplate) einen geänderten Datencontext; der zeigt jeweils auf 
                                            eine Instanz des FileTile-Model. Irgenwie kann das Binding nicht aufgelöst werden. 
                                            Workaround: Die FileTile-Model Klasse stellt ebenfalls die Kommando-Properties bereit.-->

                                                <!--<MenuItem Header="Favorit Test"
                                            Style="{StaticResource CustomMenuItemStyle}"
                                            Command="{Binding DataContext.Cmd_ContextMenu_RemoveTargetFolder, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                            CommandParameter="{Binding}" />-->

                                                <!--<MenuItem Header="Favorit Test"
                                            Style="{StaticResource CustomMenuItemStyle}"
                                            DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                                            Command="{Binding Cmd_ContextMenu_RemoveTargetFolder}"
                                            CommandParameter="{Binding}" />-->

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_MoveImageHere}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE16D;"
                                                          Command="{Binding Cmd_MoveImagesCommand}"
                                                          CommandParameter="{Binding}"/>

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_OpenFolder}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE19C;"
                                                          Command="{Binding Cmd_ShowSubDirsCommand}"
                                                          CommandParameter="{Binding}"/>

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_CreateSubFolder}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE1DA;"
                                                          Command="{Binding Cmd_CreateSubDirsCommand}"
                                                          CommandParameter="{Binding}"/>

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_DeleteFolder}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE107;"
                                                          Command="{Binding Cmd_DeleteSubDirsCommand}"
                                                          CommandParameter="{Binding}"/>

                                            </ContextMenu>
                                        </Button.ContextMenu>

                                    </Button>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                        </ItemsControl>

                        <ScrollViewer.ContextMenu>
                            <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                <MenuItem Name="cmVirtualDirSec_CreateFolder"
                                          Header="{lex:Loc}"
                                          Style="{StaticResource CustomMenuItemStyle}"
                                          Tag="&#xE1DA;"
                                          Command="{Binding Cmd_ContextMenu_VirtualFirstStageCreateDirectory}"
                                          CommandParameter="{Binding}"/>

                            </ContextMenu>
                        </ScrollViewer.ContextMenu>
                    </ScrollViewer>

                    <!-- 2nd Stage Directory Content List -->
                    <Rectangle Grid.Column="3"
                           Width="1"
                           Fill="{DynamicResource VirtualDirectorySeperatorColor}" 
                           HorizontalAlignment="Left" 
                           Margin="0,1,10,0"/>

                    <ScrollViewer Grid.Column="4" >
                        <ItemsControl ItemsSource="{Binding VirtualSecundStageDirectoryList}">

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>

                                    <Button Style="{StaticResource VirtualRootDirectoryButtonStyle}"
                                        Margin="5"                                                        
                                                                                                                                                               
                                        ToolTip="{Binding ToolTip}"
                    
                                        Command="{Binding DataContext.Cmd_ClickOnVirtualSecondStagDirectoryItem, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}">

                                        <Button.ContextMenu>
                                            <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                                <!--Irgenwie funktioniert das mit dem CommandoBinding nicht: Die Kommando-Properties sind im Viewmodel abgelegt. 
                                                um darauf zuzugreifen, muss mus der Datencontext der Items, die in der ItemsControl-Liste
                                                Angezeit werden, geändert werden. Diese Items haben (DataTemplate) einen geänderten Datencontext; der zeigt jeweils auf 
                                                eine Instanz des FileTile-Model. Irgenwie kann das Binding nicht aufgelöst werden. 
                                                Workaround: Die FileTile-Model Klasse stellt ebenfalls die Kommando-Properties bereit.-->

                                                <!--<MenuItem Header="Favorit Test"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                Command="{Binding DataContext.Cmd_ContextMenu_RemoveTargetFolder, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}" />-->

                                                <!--<MenuItem Header="Favorit Test"
                                                Style="{StaticResource CustomMenuItemStyle}"
                                                DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                                                Command="{Binding Cmd_ContextMenu_RemoveTargetFolder}"
                                                CommandParameter="{Binding}" />-->

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_MoveImageHere}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE16D;"
                                                          Command="{Binding Cmd_MoveImagesCommand}"
                                                          CommandParameter="{Binding}"/>

                                                <MenuItem Header="{lex:Loc cmVirtualDirSec_DeleteFolder}"
                                                          Style="{StaticResource CustomMenuItemStyle}"
                                                          Tag="&#xE107;"
                                                          Command="{Binding Cmd_DeleteSubDirsCommand}"
                                                          CommandParameter="{Binding}"/>

                                            </ContextMenu>
                                        </Button.ContextMenu>

                                    </Button>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                        </ItemsControl>

                        <ScrollViewer.ContextMenu>
                            <ContextMenu Style="{StaticResource CustomContextMenuStyle}">

                                <MenuItem Name="cmVirtualDirSec_CreateFolder2"
                                          Header="{lex:Loc}"
                                          Style="{StaticResource CustomMenuItemStyle}"
                                          Tag="&#xE1DA;"
                                          Command="{Binding Cmd_ContextMenu_VirtualSecondStageCreateDirectory}"
                                          CommandParameter="{Binding}"/>

                            </ContextMenu>
                        </ScrollViewer.ContextMenu>
                    </ScrollViewer>

                </Grid>

                <TextBlock Grid.Row="1"
                           Margin="0"
                           Foreground="{DynamicResource VirtualDirectoryTitleTextForegroundColor}"
                           FontSize="12"                       
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontWeight="Light" 
                           FontStyle="Italic"
                           Visibility="{Binding VirtualRootDirectoryList.Count, Converter={StaticResource IntToVis}, ConverterParameter='visible;collapsed', FallbackValue='Visible'}"
                           Name="tbVirtualDirSec_NoItemText"
                           Text="{lex:Loc}"/>

            </Grid>
        </Border>

        <!-- Overlay: File Move Process Popup Notification List -->
        <ItemsControl Grid.Row="1"
                      Grid.RowSpan="2"
                      Grid.ColumnSpan="2"
                      ItemsSource="{Binding FileMoveProcPopupNotificationList}">

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border x:Name="PART_POPUP_BORDER"
                            Margin="10" 
                            Padding="10"
                            Width="300"
                            Background="{DynamicResource ToolTipBackgroundColor}" 
                            BorderThickness="2"
                            BorderBrush="{DynamicResource CommonBorderBrushColor}"
                            CornerRadius="5">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0"
                                       Grid.Row="0"                                       
                                       HorizontalAlignment="Left"
                                       Foreground="{DynamicResource CommonForegroundColor}"
                                       Name="tbFileMovePopup_TargetPathLabel"
                                       Text="{lex:Loc}" />

                            <TextBlock Grid.Column="1"
                                       Grid.Row="0"
                                       Text="{Binding TargetPath}" 
                                       HorizontalAlignment="Left"
                                       Foreground="{DynamicResource CommonForegroundColor}"/>

                            <Button Grid.Column="1"
                                    Grid.Row="0"
                                    Margin="0" 
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Foreground="{DynamicResource FileTitleBtnSelectedColor}"
                                    FontSize="14" 
                                    FontWeight="ExtraBold"
                                    Content="✕"                                    
                                    Style="{StaticResource SymbolButton}"                                   
                                    Command="{Binding Cmd_Abort}"/>

                            <TextBlock Grid.Column="0"
                                       Grid.Row="1"                                       
                                       HorizontalAlignment="Left"
                                       Foreground="{DynamicResource CommonForegroundColor}"
                                       Name="tbFileMovePopup_FileLabel"
                                       Text="{lex:Loc}" />

                            <TextBlock Grid.Column="1"
                                       Grid.Row="1"
                                       Text="{Binding CurrentFileName}" 
                                       HorizontalAlignment="Left"
                                       Foreground="{DynamicResource CommonForegroundColor}"/>

                            <TextBlock Grid.Column="1"
                                       Grid.Row="1"
                                       HorizontalAlignment="Right"
                                       Foreground="{DynamicResource CommonForegroundColor}">
                                                               
                                 <!--<Run Text="("/>
                                 <Run Text="{Binding FileProcessed}"/>
                                 <Run Text="/"/>
                                 <Run Text="{Binding FileCount}"/>
                                 <Run Text=")"/>-->

                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}({0}/{1})">
                                        <Binding Path="FileProcessed" />
                                        <Binding Path="FileCount" />
                                    </MultiBinding>
                                </TextBlock.Text>

                            </TextBlock>

                            <ProgressBar Grid.Column="0"
                                         Grid.Row="2" 
                                         Grid.ColumnSpan="2"
                                         x:Name="PART_POPUP_PROGRESSBAR"
                                         Height="10"
                                         Value="{Binding FileProcessed}" 
                                         Maximum="{Binding FileCount}"
                                         Margin="0,15,0,0"/>

                            <TextBlock Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Grid.Row="3"
                                       x:Name="PART_POPUP_ERROR_MSG"
                                       Margin="0,10,0,0"
                                       HorizontalAlignment="Center"
                                       Foreground="Red"
                                       Visibility="Collapsed"
                                       TextWrapping="Wrap"
                                       Text="{lex:Loc tbFileMovePopup_ErrorMessage}"/>

                        </Grid>
                    </Border>

                    <DataTemplate.Triggers>
                        
                        <DataTrigger Binding="{Binding IsFadingOut}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                         To="0" 
                                                         Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding HasFileProcessError}" Value="true">
                            <Setter TargetName="PART_POPUP_BORDER" Property="BorderBrush" Value="Red"/>
                            <Setter TargetName="PART_POPUP_PROGRESSBAR" Property="Foreground" Value="Red"/>
                            <Setter TargetName="PART_POPUP_ERROR_MSG" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                    </DataTemplate.Triggers>

                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.Style>
                <Style TargetType="ItemsControl">
                    <Setter Property="VerticalAlignment" Value="Bottom"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="Margin" Value="0,0,20,20"/>
                </Style>
            </ItemsControl.Style>
        </ItemsControl>

        <!-- Overlay Dalog Box -->
        <userControl:DlgBoxUserControl Grid.Row="1"
                                       Grid.RowSpan="2"
                                       Grid.ColumnSpan="2"
                                       Visibility="Visible"
                                       Configuration="{Binding DialogBoxConfiguration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"/>

    </Grid>
</Window>
