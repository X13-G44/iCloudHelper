//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuickSort.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QuickSort.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add entry ähnelt.
        /// </summary>
        public static string cmFavTargFolder_AddEntry {
            get {
                return ResourceManager.GetString("cmFavTargFolder_AddEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add entry ähnelt.
        /// </summary>
        public static string cmFavTargFolder_AddEntry2 {
            get {
                return ResourceManager.GetString("cmFavTargFolder_AddEntry2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move images here ähnelt.
        /// </summary>
        public static string cmFavTargFolder_MoveImageHere {
            get {
                return ResourceManager.GetString("cmFavTargFolder_MoveImageHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove bookmark ähnelt.
        /// </summary>
        public static string cmFavTargFolder_RemoveBookmark {
            get {
                return ResourceManager.GetString("cmFavTargFolder_RemoveBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove entry ähnelt.
        /// </summary>
        public static string cmFavTargFolder_RemoveEntry {
            get {
                return ResourceManager.GetString("cmFavTargFolder_RemoveEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set bookmark ähnelt.
        /// </summary>
        public static string cmFavTargFolder_SetBookmark {
            get {
                return ResourceManager.GetString("cmFavTargFolder_SetBookmark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete images ähnelt.
        /// </summary>
        public static string cmFileTitleSec_ButtonDelete {
            get {
                return ResourceManager.GetString("cmFileTitleSec_ButtonDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Large icon size ähnelt.
        /// </summary>
        public static string cmFileTitleSec_ButtonLargeIconSize {
            get {
                return ResourceManager.GetString("cmFileTitleSec_ButtonLargeIconSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Medium icon size ähnelt.
        /// </summary>
        public static string cmFileTitleSec_ButtonMediumIconSize {
            get {
                return ResourceManager.GetString("cmFileTitleSec_ButtonMediumIconSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Small icon size ähnelt.
        /// </summary>
        public static string cmFileTitleSec_ButtonSmalIconSize {
            get {
                return ResourceManager.GetString("cmFileTitleSec_ButtonSmalIconSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deselect all ähnelt.
        /// </summary>
        public static string cmFileTitleSec_DeSelectAll {
            get {
                return ResourceManager.GetString("cmFileTitleSec_DeSelectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh folder ähnelt.
        /// </summary>
        public static string cmFileTitleSec_RefreshView {
            get {
                return ResourceManager.GetString("cmFileTitleSec_RefreshView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select all ähnelt.
        /// </summary>
        public static string cmFileTitleSec_SelectAll {
            get {
                return ResourceManager.GetString("cmFileTitleSec_SelectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add entry ähnelt.
        /// </summary>
        public static string cmVirtualDirSec_AddEntry {
            get {
                return ResourceManager.GetString("cmVirtualDirSec_AddEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add entry ähnelt.
        /// </summary>
        public static string cmVirtualDirSec_AddEntry2 {
            get {
                return ResourceManager.GetString("cmVirtualDirSec_AddEntry2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create new folder ähnelt.
        /// </summary>
        public static string cmVirtualDirSec_CreateFolder {
            get {
                return ResourceManager.GetString("cmVirtualDirSec_CreateFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create new folder ähnelt.
        /// </summary>
        public static string cmVirtualDirSec_CreateFolder2 {
            get {
                return ResourceManager.GetString("cmVirtualDirSec_CreateFolder2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create new subfolder ähnelt.
        /// </summary>
        public static string cmVirtualDirSec_CreateSubFolder {
            get {
                return ResourceManager.GetString("cmVirtualDirSec_CreateSubFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete folder ähnelt.
        /// </summary>
        public static string cmVirtualDirSec_DeleteFolder {
            get {
                return ResourceManager.GetString("cmVirtualDirSec_DeleteFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move images here ähnelt.
        /// </summary>
        public static string cmVirtualDirSec_MoveImageHere {
            get {
                return ResourceManager.GetString("cmVirtualDirSec_MoveImageHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open folder ähnelt.
        /// </summary>
        public static string cmVirtualDirSec_OpenFolder {
            get {
                return ResourceManager.GetString("cmVirtualDirSec_OpenFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove entry ähnelt.
        /// </summary>
        public static string cmVirtualDirSec_RemoveEntry {
            get {
                return ResourceManager.GetString("cmVirtualDirSec_RemoveEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No configuration exists!\n\nShould a new configuration be created with the following default folders?\n\nMonitored folder:\n\t{0}\n\nFolder for extracted image files:\n\t{1}\n\nBackup folder:\n\t{2} ähnelt.
        /// </summary>
        public static string dlg_CreateDefaultConfig {
            get {
                return ResourceManager.GetString("dlg_CreateDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not create default folders!\n\nThe application will now close. Please restart the application and manually select the required folders. ähnelt.
        /// </summary>
        public static string dlg_CreateDefaultDirError {
            get {
                return ResourceManager.GetString("dlg_CreateDefaultDirError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one required folder is missing.\nFor this program to work properly, the folders must be configured correctly.\n\nShould the configuration window be displayed so that the settings can be adjusted? ähnelt.
        /// </summary>
        public static string dlg_InvalidConfigDirs {
            get {
                return ResourceManager.GetString("dlg_InvalidConfigDirs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file &quot;{0}&quot; was not found.\n\nPlease reinstall the software. ähnelt.
        /// </summary>
        public static string dlg_MissingFile {
            get {
                return ResourceManager.GetString("dlg_MissingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        public static string dlgAppExitFileCopyStillActive_Cancle {
            get {
                return ResourceManager.GetString("dlgAppExitFileCopyStillActive_Cancle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        public static string dlgAppExitFileCopyStillActive_ExitApp {
            get {
                return ResourceManager.GetString("dlgAppExitFileCopyStillActive_ExitApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Files are currently being processed in the background.\n\nIf you close the application, this process will be aborted. Not all selected files will be moved to the destination folder!\n\nAre you sure you want to close the application? ähnelt.
        /// </summary>
        public static string dlgAppExitFileCopyStillActive_Message {
            get {
                return ResourceManager.GetString("dlgAppExitFileCopyStillActive_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        public static string dlgDelayNotEmptyDir_Cancle {
            get {
                return ResourceManager.GetString("dlgDelayNotEmptyDir_Cancle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        public static string dlgDelayNotEmptyDir_DeleteDir {
            get {
                return ResourceManager.GetString("dlgDelayNotEmptyDir_DeleteDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected directory:\n\n\t{0}\n\nis not empty!\n\nAre your sure to delete the directory? ähnelt.
        /// </summary>
        public static string dlgDelayNotEmptyDir_Message {
            get {
                return ResourceManager.GetString("dlgDelayNotEmptyDir_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while deleting the folder {0}.\nCause: {1} ähnelt.
        /// </summary>
        public static string dlgDeleteDirError_Message {
            get {
                return ResourceManager.GetString("dlgDeleteDirError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        public static string dlgDeleteImageFile_Cancle {
            get {
                return ResourceManager.GetString("dlgDeleteImageFile_Cancle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        public static string dlgDeleteImageFile_Delete {
            get {
                return ResourceManager.GetString("dlgDeleteImageFile_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Errors occurred while deleting the images! ähnelt.
        /// </summary>
        public static string dlgDeleteImageFile_ErrorMessage {
            get {
                return ResourceManager.GetString("dlgDeleteImageFile_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to delete the {0} selected images? ähnelt.
        /// </summary>
        public static string dlgDeleteImageFile_Message {
            get {
                return ResourceManager.GetString("dlgDeleteImageFile_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not all images could be opened and displayed!\n\n[0] ähnelt.
        /// </summary>
        public static string dlgErrorLoadingImagesFromDir_Message {
            get {
                return ResourceManager.GetString("dlgErrorLoadingImagesFromDir_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select new Favorites folder ähnelt.
        /// </summary>
        public static string dlgFavTargFolder_HelpText {
            get {
                return ResourceManager.GetString("dlgFavTargFolder_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancle ähnelt.
        /// </summary>
        public static string dlgFileMove_Cancle {
            get {
                return ResourceManager.GetString("dlgFileMove_Cancle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Should the {0} selected images be moved to &quot;{1}&quot;? ähnelt.
        /// </summary>
        public static string dlgFileMove_QuestionText {
            get {
                return ResourceManager.GetString("dlgFileMove_QuestionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move ähnelt.
        /// </summary>
        public static string dlgFileMove_StartMove {
            get {
                return ResourceManager.GetString("dlgFileMove_StartMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancle ähnelt.
        /// </summary>
        public static string dlgNewFolder_Cancle {
            get {
                return ResourceManager.GetString("dlgNewFolder_Cancle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create ähnelt.
        /// </summary>
        public static string dlgNewFolder_Create {
            get {
                return ResourceManager.GetString("dlgNewFolder_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New folder name ähnelt.
        /// </summary>
        public static string dlgNewFolder_NewFolder {
            get {
                return ResourceManager.GetString("dlgNewFolder_NewFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New folder name: ähnelt.
        /// </summary>
        public static string dlgNewFolder_QuestionText {
            get {
                return ResourceManager.GetString("dlgNewFolder_QuestionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while creating the new folder.\nCause: {0} ähnelt.
        /// </summary>
        public static string dlgNewFolderError_Message {
            get {
                return ResourceManager.GetString("dlgNewFolderError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select folder to add ähnelt.
        /// </summary>
        public static string dlgVirtualDirSec_HelpText {
            get {
                return ResourceManager.GetString("dlgVirtualDirSec_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder already exists. ähnelt.
        /// </summary>
        public static string lDirectoyExists {
            get {
                return ResourceManager.GetString("lDirectoyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder does not exists. ähnelt.
        /// </summary>
        public static string lDirectoyNotExists {
            get {
                return ResourceManager.GetString("lDirectoyNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string lError {
            get {
                return ResourceManager.GetString("lError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid folder name. ähnelt.
        /// </summary>
        public static string lInvalidDirName {
            get {
                return ResourceManager.GetString("lInvalidDirName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input field is empty ähnelt.
        /// </summary>
        public static string lNoText {
            get {
                return ResourceManager.GetString("lNoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number must between {0} and {1}. ähnelt.
        /// </summary>
        public static string lNumberRangeError {
            get {
                return ResourceManager.GetString("lNumberRangeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Question ähnelt.
        /// </summary>
        public static string lQuestion {
            get {
                return ResourceManager.GetString("lQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text must be a number. ähnelt.
        /// </summary>
        public static string lTextMustBeANumber {
            get {
                return ResourceManager.GetString("lTextMustBeANumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string lWarning {
            get {
                return ResourceManager.GetString("lWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Right-click to add new favorites ähnelt.
        /// </summary>
        public static string tbFavTargFolder_NoItemText {
            get {
                return ResourceManager.GetString("tbFavTargFolder_NoItemText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Favorites ähnelt.
        /// </summary>
        public static string tbFavTargFolder_Title {
            get {
                return ResourceManager.GetString("tbFavTargFolder_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while processing the file! ähnelt.
        /// </summary>
        public static string tbFileMovePopup_ErrorMessage {
            get {
                return ResourceManager.GetString("tbFileMovePopup_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image:  ähnelt.
        /// </summary>
        public static string tbFileMovePopup_FileLabel {
            get {
                return ResourceManager.GetString("tbFileMovePopup_FileLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target folder:  ähnelt.
        /// </summary>
        public static string tbFileMovePopup_TargetPathLabel {
            get {
                return ResourceManager.GetString("tbFileMovePopup_TargetPathLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading images... ([0]/[1]) ähnelt.
        /// </summary>
        public static string tbFileTitleSec_LodingImages {
            get {
                return ResourceManager.GetString("tbFileTitleSec_LodingImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No images found. Use the settings to change the source folder. ähnelt.
        /// </summary>
        public static string tbFileTitleSec_NoItemText {
            get {
                return ResourceManager.GetString("tbFileTitleSec_NoItemText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 image selected ähnelt.
        /// </summary>
        public static string tbFileTitleSec_SubTitle_1 {
            get {
                return ResourceManager.GetString("tbFileTitleSec_SubTitle_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [0] images selected ähnelt.
        /// </summary>
        public static string tbFileTitleSec_SubTitle_2 {
            get {
                return ResourceManager.GetString("tbFileTitleSec_SubTitle_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image selection ähnelt.
        /// </summary>
        public static string tbFileTitleSec_Title {
            get {
                return ResourceManager.GetString("tbFileTitleSec_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Right-click to add folders ähnelt.
        /// </summary>
        public static string tbVirtualDirSec_NoItemText {
            get {
                return ResourceManager.GetString("tbVirtualDirSec_NoItemText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target folder ähnelt.
        /// </summary>
        public static string tbVirtualDirSec_Title {
            get {
                return ResourceManager.GetString("tbVirtualDirSec_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name:    \t[0]\nFolder:  \t[1] ähnelt.
        /// </summary>
        public static string ttFavTargFolder_FavTargetItem {
            get {
                return ResourceManager.GetString("ttFavTargFolder_FavTargetItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete images ähnelt.
        /// </summary>
        public static string ttFileTitleSec_ButtonDelete {
            get {
                return ResourceManager.GetString("ttFileTitleSec_ButtonDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deselect all images ähnelt.
        /// </summary>
        public static string ttFileTitleSec_ButtonDeselectAll {
            get {
                return ResourceManager.GetString("ttFileTitleSec_ButtonDeselectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Large icon size ähnelt.
        /// </summary>
        public static string ttFileTitleSec_ButtonLargeIconSize {
            get {
                return ResourceManager.GetString("ttFileTitleSec_ButtonLargeIconSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Medium icon size ähnelt.
        /// </summary>
        public static string ttFileTitleSec_ButtonMediumIconSize {
            get {
                return ResourceManager.GetString("ttFileTitleSec_ButtonMediumIconSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select all images ähnelt.
        /// </summary>
        public static string ttFileTitleSec_ButtonSelectAll {
            get {
                return ResourceManager.GetString("ttFileTitleSec_ButtonSelectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string ttFileTitleSec_ButtonSettings {
            get {
                return ResourceManager.GetString("ttFileTitleSec_ButtonSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Small icon size ähnelt.
        /// </summary>
        public static string ttFileTitleSec_ButtonSmalIconSize {
            get {
                return ResourceManager.GetString("ttFileTitleSec_ButtonSmalIconSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name:            \t[0]\nFolder:          \t[1]\nSize:            \t[2]kB\nCreation date:   \t[3]\nLast access:     \t[4] ähnelt.
        /// </summary>
        public static string ttFileTitleSec_FileTitleItem {
            get {
                return ResourceManager.GetString("ttFileTitleSec_FileTitleItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open iCloud Website ähnelt.
        /// </summary>
        public static string ttFileTitleSec_OpenICloud {
            get {
                return ResourceManager.GetString("ttFileTitleSec_OpenICloud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name:            \t[0]\nFolder:          \t[1]\nFile count:      \t[2]\nSubfilder count: \t[3] ähnelt.
        /// </summary>
        public static string ttVirtualDirSec_DirItem {
            get {
                return ResourceManager.GetString("ttVirtualDirSec_DirItem", resourceCulture);
            }
        }
    }
}
